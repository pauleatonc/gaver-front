FROM node:18-alpine AS build

# Argumentos de construcción para variables VITE_*
ARG VITE_GOOGLE_CLIENT_ID
ARG VITE_GOOGLE_CLIENT_SECRET
ARG VITE_GOOGLE_REDIRECT_URI
ARG VITE_MEDIA_URL
ARG VITE_API_URL
ARG VITE_API_VERSION

# Convertir ARG a ENV para que estén disponibles durante el build
ENV VITE_GOOGLE_CLIENT_ID=$VITE_GOOGLE_CLIENT_ID
ENV VITE_GOOGLE_CLIENT_SECRET=$VITE_GOOGLE_CLIENT_SECRET
ENV VITE_GOOGLE_REDIRECT_URI=$VITE_GOOGLE_REDIRECT_URI
ENV VITE_MEDIA_URL=$VITE_MEDIA_URL
ENV VITE_API_URL=$VITE_API_URL
ENV VITE_API_VERSION=$VITE_API_VERSION

WORKDIR /app

# Copiar archivos de configuración
COPY package*.json ./

# Instalar dependencias
RUN npm ci

# Copiar el código fuente
COPY . .

# Cache buster - forzar reconstrucción
RUN date > /tmp/build_date

# Debug: Mostrar variables de entorno que empiecen con VITE_
RUN echo "=== VARIABLES VITE_* DISPONIBLES ===" && \
    env | grep VITE_ | sort || echo "❌ NO SE ENCONTRARON VARIABLES VITE_" && \
    echo "=== TODAS LAS VARIABLES DE ENTORNO ===" && \
    env | sort | head -20

# Construir la aplicación para producción
RUN npm run build

# Etapa de producción
FROM node:18-alpine AS production

WORKDIR /app

# Instalar un servidor HTTP simple
RUN npm install -g serve

# Copiar los archivos construidos desde la etapa de build
COPY --from=build /app/dist ./dist

# Exponer el puerto dinámico que Render asigna
EXPOSE $PORT

# Comando para servir la aplicación en producción
CMD ["sh", "-c", "serve -s dist -l $PORT"] 